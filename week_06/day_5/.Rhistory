knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
library(tidyverse)
library(tidyverse)
data(msleep)
msleep <- msleep
View(msleep)
glimpse(msleep)
View(msleep)
msleep %>%
ggplot() +
aes(x = sleep_total) +
geom_boxplot()
observed_stat <- msleep %>%
summarise(mean_sleep = mean(total_sleep))
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
null_distribution <- msleep %>%
specify(response = mean_sleep) %>%
hypothesise(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
library(infer)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
null_distribution <- msleep %>%
specify(response = mean_sleep) %>%
hypothesise(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep,
direction = "both")
null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
vore <- msleep %>%
group_by(vore) %>%
filter(vore %in% c("omni","herbi")) %>%
summarise(n = n())
vore
vore <- msleep %>%
group_by(vore) %>%
filter(vore %in% c("omni","herbi"))
q3_null_distribution <- vore %>%
specify(total_sleep ~ vore) %>%
hypothesise(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni","herbi"))
vore <- msleep %>%
group_by(vore) %>%
filter(vore %in% c("omni","herbi"))
q3_null_distribution <- vore %>%
specify(sleep_total ~ vore) %>%
hypothesise(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni","herbi"))
q3_observed_stat <- vore %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni","herbi"))
q3_null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
q3_p_value <- q3_null_distribution %>%
get_p_value(obs_stat = q2_observed_stat, direction = "right")
q3_p_value <- q3_null_distribution %>%
get_p_value(obs_stat = q3_observed_stat, direction = "right")
q3_p_value
q3_null_distribution %>%
visualise() +
shade_p_value(obs_stat = q2_observed_stat, direction = "right")
q3_null_distribution %>%
visualise() +
shade_p_value(obs_stat = q3_observed_stat, direction = "right")
msleep <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "yes", "no"))
msleep <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "yes", "no"))
q4_null_distribution <- msleep %>%
specify(response = is_domesticated, success = "yes") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
q4_null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat$prop,
direction = "right")
q4_null_distribution %>%
get_p_value(obs_stat = q4_observed_stat, direction = "right")
q4_null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "right")
dom_msleep <- msleep %>%
filter(!is.na(is_domesticated)) %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "yes", "no"))
q4_observed_stat <- dom_msleep %>%
filter(is_domesticated == "yes") %>%
summarise(prop = n()/nrow(msleep))
q4_observed_stat <- dom_msleep %>%
filter(is_domesticated == "yes") %>%
summarise(prop = n()/nrow(dom_msleep))
q4_observed_stat
nrow(dom_msleep)
q4_null_distribution <- dom_msleep %>%
specify(response = is_domesticated, success = "yes") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
q4_null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = q4_observed_stat$prop,
direction = "right")
q4_null_distribution %>%
get_p_value(obs_stat = q4_observed_stat, direction = "right")
